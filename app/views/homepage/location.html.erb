<script>
  var interval_period = <%= @user ? update_frequency_values(@user.update_frequency)[0] : 60 %> * 1000;
  var interval = setInterval(timerTick, interval_period);

  function timerTick() {
    getLocation();
  }

  function turn_on() {
    timerTick();
    interval = setInterval(timerTick, interval_period);
  }

  function turn_off() {
    clearInterval(interval);
  }

  window.onload = timerTick;


  var x = document.getElementById("demo");

  function getLocation() {
    if (false)
    {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(sendPosition);
      } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
      }
      return;

    }
  }


  function sendPosition(position) {
    var xhr = new XMLHttpRequest();
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "position", true);
    var d = new Date();
    var time_string = d.toLocaleTimeString().replace(/\s/g, '');
    xhr.onload = function () {
          var jsonResponse = JSON.parse(xhr.responseText);
          var pos = new google.maps.LatLng(51.544328 + (51.536808-51.544328) * jsonResponse.counter / 10 ,-0.106652);
          marker.setPosition (pos);
         };
            xhr.onerror = function () {
             alert(xhr.statusText);
        };
    xhr.send(time_string + " " + position.coords.latitude + " " + position.coords.longitude + " " + "<%= cookies[:location_user_id].to_s %>");
  }

  var map, marker, barnsbury_ne, barnsbury_sw;

  function initMap() {
    //London Stadium 51.538611, -0.016389
    //St Paul's 51.513611, -0.098056
    //Cornwall 50.4, -4.9
    //Stonehenge 51.178889, -1.826111

    barnsbury_ne = new google.maps.LatLng(51.544328, -0.106652)
    barnsbury_sw = new google.maps.LatLng(51.536808, -0.116385)

    var ne = new google.maps.LatLng(51.538611,-0.016389);
    //var sw = new google.maps.LatLng(51.513611, -0.098056);
    var sw = new google.maps.LatLng(50.4, -4.9);
    var sh = new google.maps.LatLng(51.178889, -1.826111);

    var bounds =  new google.maps.LatLngBounds(barnsbury_sw, barnsbury_ne);

    //https://developers.google.com/maps/documentation/javascript/reference/map#Map

    map = new google.maps.Map(document.getElementById('map'), {
      draggable: true,
      heading: 90

    });
    // var bounds = new google.maps.LatLngBounds();
    // bounds.extend(ne);
    // bounds.extend(sw);
    map.fitBounds(bounds,0);

    marker = new google.maps.Marker({
        position: barnsbury_ne,
        map: map,
        title: 'barnsbury_ne'
      });
    //   var marker2 = new google.maps.Marker({
    //       position: barnsbury_sw,
    //       map: map,
    //       animation: google.maps.Animation.BOUNCE,
    //       title: 'barnsbury_sw',
    //       label: "Test"
    //     });
  }

  var expanded = false;

  function showCheckboxes() {
    var checkboxes = document.getElementById("checkboxes");
    if (!expanded) {
      checkboxes.style.display = "block";
      expanded = true;
    } else {
      checkboxes.style.display = "none";
      expanded = false;
    }
  }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD-MiNsHFnMMt2RS_MzZeKZTUoUS-ITdFI&callback=initMap" async defer></script>

<style>
  /* Always set the map height explicitly to define the size of the div
   * element that contains the map. */
  #map {
    height: 300px;
    width : 60%;
    margin: 0 auto;

  }
  /* Optional: Makes the sample page fill the window. */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }

  .multiselect {
    width1: 200px;
  }

  .selectBox {
    position: relative;
    border-style: solid;
    border-width: 1px;
    border-radius: 2px;
    border-color: blue;

  }

  .selectBox select {
    width: 100%;
    font-weight: bold;
  }

  .overSelect {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
  }

  #checkboxes {
    display: none;
    border-style: solid;
    border-width: 1px;
    border-radius: 2px;
    border-color: blue;
  }

  #checkboxes label {
    display: block;
  }

  #checkboxes label:hover {
    background-color: #1e90ff;
  }

</style>


  <table width="100%">
    <col width="*">
    <col width="300px">
    <tr>
      <td>
      </td>
      <td>

        <div class="dropdown">
          <%= image_tag "menu.png", :class => "dropbtn", :align => "right", :size => "20x20" %>
          <div class="dropdown-content">
            <%= form_tag  location_controls_path, id: "controls" do %>
              <table width="100%">
                <col width="50%">
                <col width="50%">
                <% if User.count == 0 %>
                  <tr>
                    <td>
                      <%= submit_tag "Set up users", :class=> "location_input" %>
                    </td>
                    <td>
                    </td>
                  </tr>
                <% end %>

                <% if User.count > 0 %>
                  <% if @user %>
                    <tr>
                      <td>
                        Allow monitoring
                      </td>
                      <td align="left">
                        On <%= radio_button_tag :allow_monitoring, "1", @user.allow_monitoring , :onchange => "controls.submit()" %><%= radio_button_tag :allow_monitoring, "0", !@user.allow_monitoring, :onchange => "controls.submit()" %>Off
                      </td>
                    </tr>
                  <% end %>
                <% end %>

                <tr>
                  <td>
                    Who are you?
                  </td>
                  <td align="left">
                    <%= select_tag :user_id, options_for_select( User.all.order(:name).all.map{|user| [user.name, user.id]}, cookies[:location_user_id].to_s) , {:class=> "location_input", :onchange => "controls.submit();"} %>
                  </td>
                </tr>

                <% if @user %>
                  <tr>
                    <td>
                      Following
                    </td>
                    <td align="left">
                        <div class="multiselect" text-align="right">
                        <div class="selectBox" style="width: 100px" onclick="showCheckboxes()">
                          <select>
                            <option>Select</option>
                          </select>
                          <div class="overSelect"></div>
                        </div>
                        <div id="checkboxes">
                          <% User.all.each do |user| %>
                            <label for="user<%= user.id.to_s %>">
                              <%= check_box_tag "user" + user.id.to_s, 1, Following.where(:following_user_id => @user.id, :monitored_user_id => user.id).count > 0, :id => "user" + user.id.to_s, :onchange => "controls.submit()" %>
                              <%= user.name %>
                            </label>
                          <% end %>
                        </div>
                      </div>
                    </td>
                  </tr>

                  <tr>
                    <td>
                      Last posting within
                    </td>
                    <td align="left">
                      <%= select_tag :last_posting_within, options_for_select( last_posting_options, @user.last_posting_within) , {:class=> "location_input", :onchange => "controls.submit();"} %>
                    </td>
                  </tr>

                  <tr>
                    <td>
                      Update every
                    </td>
                    <td align="left">
                      <%= select_tag :update_frequency, options_for_select( update_frequency_options, @user.update_frequency) , {:class=> "location_input", :onchange => "controls.submit();"} %>
                    </td>
                  </tr>
                <% end %>

              </table>
            <% end %>
          </div>
        </div>
      </td>
    </tr>
  </table>

Number of users: <%= User.count.to_s %>

<div id="map"></div>
